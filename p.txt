char: i
char: f
char: y
char: .
Statements: tag 
char: t
char: a
char: g

--

 Symbol("tag")  EOL 
 EOF 
--

char: =
char:  
char: x
char: .
Statements: tag 
char: t
char: a
char: g

--

 Symbol("tag")  EOL 
 EOF 
--

char: &
char: &
GOT AND
char:  
char: y
char: .
Statements: score 
char: s
char: c
char: o
char: r
char: e

--

 Symbol("score")  EOL 
 EOF 
--

char: =
char:  
char: x
char: .
Statements: score
char: s
char: c
char: o
char: r
char: e

--

 Symbol("score")  EOL 
 EOF 
--


--

 Symbol("y")  Period([Symbol("tag")])  Equivalence  Symbol("x")  Period([Symbol("tag")])  And  Symbol("y")  Period([Symbol("score")])  Equivalence  Symbol("x")  Period([Symbol("score")])  EOL 
 EOF 
--

char: {
char:  
char:  
char: y
char: .
Statements: kill();
char: k
char: i
char: l
char: l
char: (

--

 EOL 
 EOF 
--


--

 Symbol("kill")  Parens([])  EOL 
 EOF 
--

char: }

--

 If([Symbol("y"), Period([Symbol("tag")]), Equivalence, Symbol("x"), Period([Symbol("tag")]), And, Symbol("y"), Period([Symbol("score")]), Equivalence, Symbol("x"), Period([Symbol("score")])])  LBrace  EOL 
 Symbol("y")  Period([Symbol("kill"), Parens([])])  SemiColon  EOL 
 RBrace  EOL 
 EOL 
 EOF 
--

Generated operation: Some(UseVariable("y", AccessPart(Access("tag")))) Some(Equal) Some(UseVariable("x", AccessPart(Access("tag"))))
PRIMED AND
Generated operation: Some(Operation(UseVariable("y", AccessPart(Access("tag"))), Equal, UseVariable("x", AccessPart(Access("tag"))))) Some(And) Some(UseVariable("y", AccessPart(Access("score"))))
Generated operation: Some(Operation(Operation(UseVariable("y", AccessPart(Access("tag"))), Equal, UseVariable("x", AccessPart(Access("tag")))), And, UseVariable("y", AccessPart(Access("score"))))) Some(Equal) Some(UseVariable("x", AccessPart(Access("score"))))
[If([Operation(Operation(Operation(UseVariable("y", AccessPart(Access("tag"))), Equal, UseVariable("x", AccessPart(Access("tag")))), And, UseVariable("y", AccessPart(Access("score")))), Equal, UseVariable("x", AccessPart(Access("score"))))], CodeBlock([UseVariable("y", AccessPart(Function("kill", [Set([])])))]))]
